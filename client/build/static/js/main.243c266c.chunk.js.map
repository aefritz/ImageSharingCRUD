{"version":3,"sources":["services/services.js","components/Nav.jsx","components/Login.jsx","components/Register.jsx","components/Comments.jsx","components/Likes.jsx","components/Post.jsx","components/Reel.jsx","components/Footer.jsx","components/PostForm.jsx","components/Hero.jsx","components/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["cloudinaryApi","axios","create","baseURL","BASE_URL","uploadPhoto","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","resp","wrap","_context","prev","next","console","log","post","file","upload_preset","sent","abrupt","stop","_x","apply","this","arguments","createUser","_ref2","_callee2","_context2","concat","_x2","loginUser","_ref3","_callee3","_context3","_x3","editUser","_ref4","_callee4","id","_context4","put","headers","Authorization","localStorage","getItem","_x4","_x5","createPost","_ref5","_callee5","_context5","_x6","_x7","editPost","_ref6","_callee6","_context6","_x8","_x9","deletePost","_ref7","_callee7","user_id","post_id","_context7","delete","_x10","_x11","getAllPosts","_ref8","_callee8","_context8","get","createLike","_ref10","_callee10","_context10","text","_x13","_x14","createComment","_ref11","_callee11","_context11","_x15","_x16","_x17","getPostComments","_ref12","_callee12","_context12","_x18","getPostLikes","_ref13","_callee13","_context13","_x19","api_key","process","REACT_APP_API_KEY","api_secret","REACT_APP_API_SECRET","Nav","props","react_default","createElement","className","proPic","react_router_dom","to","currentUser","lib","cloudName","apiKey","apiSecret","publicId","isLoggedIn","onClick","handleLogout","Login","userForm","handleChange","handleLogin","onSubmit","type","name","placeholder","onChange","value","email","password","react_router","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bio","filepath","handleSubmit","bind","assertThisInitialized","ev","preventDefault","base64","public_id","error","t0","pro_pic","undefined","setItem","JSON","stringify","handleRegister","setState","e","_e$target","target","prevState","objectSpread","defineProperty","required","src","width","style","borderRadius","alt","build_min_default","multiple","onDone","getFiles","Component","Comments","postId","comments","commentField","comment","toConsumableArray","Fragment","map","Likes","likes","isThisLiked","some","like","parseInt","userId","_this2","length","Post","isEdit","_this$props","title","description","handleDelete","currentPost","handleEditChange","setCurrentPost","handleEditSubmit","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","components_Likes","components_Comments","Reel","reelPosts","components_Post","key","Footer","PostForm","response","updateReel","_ev$target","Hero","homeMsg","Profile","setProfileForm","handleEditProfChange","handleEditProfSubmit","profileForm","App","authToken","redirected","handleUpload","handleRedirect","loginErrorMessage","filter","idx","parse","redirect","_e$target2","_e$target3","userEdit","newPost","user","loadReel","msg","token","removeItem","userData","components_Nav","components_Hero","exact","path","render","components_Login","components_Register","components_Profile","components_PostForm","components_Reel","userReel","components_Footer","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.243c266c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL =\n  'https://api.cloudinary.com/v1_1/photo-sharing-app/image/upload';\n\nlet cloudinaryApi = axios.create({\n  baseURL: baseURL\n});\n\nconst BASE_URL = 'https://post-picle.herokuapp.com';\n\nconst uploadPhoto = async (data) => {\n  console.log('triggered');\n  let resp = await cloudinaryApi.post('' ,\n    {\n      file: data,\n      upload_preset: 'v3ntb0un'\n    }\n  );\n  return resp;\n}\n// Register\nconst createUser = async (data) => {\n  const resp = await axios.post(`${BASE_URL}/users`, data);\n  return resp.data;\n};\n// Login\nconst loginUser = async (data) => {\n  const resp = await axios.post(`${BASE_URL}/users/login`, data);\n  return resp.data;\n}\n// Edit profile\nconst editUser = async (id, data) => {\n  const resp = await axios.put(`${BASE_URL}/users/${id}`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  console.log(resp.data)\n  return resp.data;\n}\n// Create post\nconst createPost = async (id, data) => {\n  const resp = await axios.post(`${BASE_URL}/users/${id}/posts`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n// Edit/Change post\n\nconst editPost = async (id, data) => {\n  const resp = await axios.put(`${BASE_URL}/users/${id}/posts`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data\n}\n// Delete post\nconst deletePost = async (user_id, post_id) => {\n  const resp = await axios.delete(`${BASE_URL}/users/${user_id}/posts/${post_id}`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n// Get all public posts once logged in\nconst getAllPosts = async () => {\n  const resp = await axios.get(`${BASE_URL}/posts`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n// Get users own post on profile page\nconst getUserPosts = async (id) => {\n  const resp = await axios.get(`${BASE_URL}/users/${id}/posts`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n\n//endpoint to record a like on a post\nconst createLike = async (user_id, post_id) => { //here user_id refers to the user who is doing the liking\n  const resp = await axios.post(`${BASE_URL}/like/users/${user_id}/posts/${post_id}`, {text: \"placeholder\"},\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to make a comment on a post\nconst createComment = async (user_id, post_id, text) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.post(`${BASE_URL}/comment/users/${user_id}/posts/${post_id}`, {text},\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all comments for a post\nconst getPostComments = async (post_id) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.get(`${BASE_URL}/post/${post_id}/comments`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all likes for a post\nconst getPostLikes = async (post_id) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.get(`${BASE_URL}/post/${post_id}/likes`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all likes for a user\nconst getUserLikes = async (user_id) => { //here user_id refers to the user whose likes you're getting\n  const resp = await axios.get(`${BASE_URL}/users/${user_id}/likes`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\nexport {\n  uploadPhoto,\n  createUser,\n  loginUser,\n  editUser,\n  createPost,\n  editPost,\n  deletePost,\n  getAllPosts,\n  getUserPosts,\n  createLike,\n  createComment,\n  getPostComments,\n  getPostLikes,\n  getUserLikes\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CloudinaryContext, Image } from 'cloudinary-react';\n\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nconst Nav = props => {\n  return (\n    <header>\n      <nav className=\"container\">\n      {props.proPic &&\n        <Link to={\"/users/\" + props.currentUser.id}>\n          <CloudinaryContext\n            cloudName='photo-sharing-app'\n            apiKey={api_key}\n            apiSecret={api_secret}>\n            <Image className=\"nav-pro-pic\" publicId={props.proPic} />\n          </CloudinaryContext>\n        </Link>}\n        <Link to='/'>Home</Link>\n        {\n          props.isLoggedIn\n            ?\n            <Link to='/' onClick={props.handleLogout}>Logout</Link>\n            :\n            <span>\n              <Link to='/login'>Login</Link> / <Link to='/register'>Register</Link>\n            </span>\n        }\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nconst Login = props => {\n  const { userForm, handleChange, handleLogin, isLoggedIn } = props;\n  return (\n    <form\n      onSubmit={handleLogin}\n      className=\"login-form\">\n      <h2>Login</h2>\n      <input\n        type='text'\n        name='email'\n        placeholder=\"Email\"\n        onChange={handleChange}\n        value={userForm.email}\n      />\n      <input\n        type='password'\n        name='password'\n        placeholder=\"Password\"\n        onChange={handleChange}\n        value={userForm.password}\n      />\n      <button onClick={handleLogin} type='button'>\n        Submit\n      </button>\n      {isLoggedIn && <Redirect to='/'/>}\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FilesBase64 from 'react-file-base64';\nimport { createUser, uploadPhoto } from '../services/services.js';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userForm: {\n        name: '',\n        email: '',\n        password: '',\n        bio: '',\n      },\n      filepath: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleSubmit(ev) {\n    ev.preventDefault();\n    let publicId;\n    if (this.state.filepath) {\n      try {\n        let resp = await uploadPhoto(this.state.filepath.base64);\n        publicId = resp.data.public_id;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    let resp = await createUser({\n      name: this.state.userForm.name,\n      password: this.state.userForm.password,\n      email: this.state.userForm.email,\n      bio: this.state.userForm.bio,\n      pro_pic: (publicId === undefined) ? \"default\" : publicId,\n    });\n    localStorage.setItem('token', resp[0]);\n    localStorage.setItem('user', JSON.stringify(resp[1]));\n    this.props.handleRegister(resp[0], resp[1]);\n  }\n\n  getFiles(filepath) {\n    this.setState({\n      filepath: filepath\n    });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }));\n  }\n\n  render() {\n    const uploadStyleObject = { borderRadius: \"100%\" };\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h2>Register</h2>\n        <input\n          type='text'\n          name='name'\n          placeholder='Name'\n          onChange={this.handleChange}\n          value={this.state.userForm.name}\n          required\n        />\n        <input\n          type='text'\n          name='email'\n          placeholder='Email'\n          onChange={this.handleChange}\n          value={this.state.userForm.email}\n          required\n        />\n        <input\n          type='password'\n          name='password'\n          placeholder='Password'\n          onChange={this.handleChange}\n          value={this.state.userForm.password}\n          required\n        />\n        <input\n          type='text'\n          name='bio'\n          placeholder='Bio'\n          onChange={this.handleChange}\n          value={this.state.userForm.bio}\n        />\n        <h6>Select Profile Picture</h6>\n        <img className=\"pro-pic-register-form\"\n          src={!(this.state.filepath === \"\") ? this.state.filepath.base64 : \"https://res.cloudinary.com/photo-sharing-app/image/upload/v1553094181/default.png\"} width='100%' style={uploadStyleObject}\n          alt=\"\" />\n        <FilesBase64 multiple={false} onDone={this.getFiles.bind(this)} />\n        <button onClick={this.handleSubmit} type='submit'>\n          Submit\n        </button>\n        {this.props.isLoggedIn && <Redirect to='/' />}\n      </form>\n    );\n  }\n};\n\nexport default Register;\n","import React, {Component} from 'react';\n//cause we might  need to render the user's picture...\nimport {createComment, getPostComments} from '../services/services';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: props.currentUser,\n      postId: props.postId,\n      comments: [],\n      commentField: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    let comments = await getPostComments(this.state.postId);\n    this.setState(prevState => ({\n      ...prevState,\n      comments: comments\n    }));\n  }\n\n  handleChange(ev) {\n    let {value} = ev.target;\n    this.setState(prevState => ({\n      ...prevState,\n      commentField: value,\n      })\n    )\n  }\n\n  async handleSubmit(ev) {\n    ev.preventDefault();\n    let comment = await createComment(\n      this.state.currentUser.id,\n      this.state.postId,\n      this.state.commentField);\n    this.setState(prevState => ({\n      ...prevState,\n      comments: [\n        ...prevState.comments,\n        comment,\n      ]\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <form>\n          <input \n            className=\"comment-input\"\n            type='text'\n            name='commentField'\n            value={this.state.commentField}\n            onChange={this.handleChange} />\n          <button \n            className=\"comment-button\"\n            type='submit' onClick={this.handleSubmit}>Comment</button>\n        </form>\n        {this.state.comments.map(comment => (\n          <p>{comment.text}</p>\n        ))}\n      </>\n    )\n  }\n\n}\n\n\nexport default Comments;\n","import React, {Component} from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport {createLike, getPostLikes} from '../services/services';\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nclass Likes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: props.currentUser,\n      postId: props.postId,\n      likes: [],\n      isThisLiked: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    let likes = await getPostLikes(this.state.postId);\n    this.setState(prevState => ({\n      ...prevState,\n      likes: likes\n    }));\n    if (this.state.currentUser !== null) {\n      if (likes.some(like => (parseInt(like.userId) === this.state.currentUser.id))) {\n        this.setState({\n          isThisLiked: true\n        });\n      }\n    }  \n  }\n\n  async handleChange() {\n    let resp = await createLike(\n      this.state.currentUser.id,\n      this.state.postId\n    );\n    this.setState(prevState => ({\n      ...prevState,\n      isThisLiked: true,\n      likes: [\n        ...prevState.likes,\n        resp\n      ]\n    }));\n  }\n\n  render() {\n    return (\n      <CloudinaryContext\n      className=\"likes\"\n      cloudName='photo-sharing-app'\n      apiKey={api_key}\n      apiSecret={api_secret}>\n \n        <span>\n        {this.state.isThisLiked ?\n        `Liked by you and ${this.state.likes.length - 1} other users` :\n        `Liked by ${this.state.likes.length} users`}\n        </span>\n        {this.state.isThisLiked ?\n          <Image publicId='heart-solid' width='20px' /> :\n          <Image publicId='heart-regular' width='20px' onClick={this.handleChange}/>\n        }\n      </CloudinaryContext>\n    )\n  }\n\n}\n\n\nexport default Likes;\n","import React, { Component } from 'react';\nimport { deletePost } from '../services/services';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport Comments from './Comments';\nimport Likes from './Likes'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false\n    };\n  }\n  render() {\n    const {\n      title,\n      description,\n      postId,\n      publicId,\n      userId,\n      handleDelete,\n      post,\n      currentPost,\n      currentUser,\n      handleEditChange,\n      setCurrentPost,\n      handleEditSubmit\n    } = this.props;\n\n    let api_key = process.env.REACT_APP_API_KEY;\n    let api_secret = process.env.REACT_APP_API_SECRET;\n\n    return (\n      <article className='card'>\n\n        <CloudinaryContext\n          cloudName='photo-sharing-app'\n          apiKey={api_key}\n          apiSecret={api_secret}>\n          <Image className=\"post\" publicId={publicId} />\n        </CloudinaryContext>\n\n\n        <section className=\"card-details\">\n          {this.state.isEdit ? (\n            <>\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                handleEditSubmit();\n                this.setState({ isEdit: false })\n              }}>\n\n                <input\n                  type='text'\n                  name='title'\n                  value={currentPost.title}\n                  onChange={handleEditChange} />\n\n                <input\n                  type='text'\n                  name='description'\n                  value={currentPost.description}\n                  onChange={handleEditChange} />\n                <button>Submit</button>\n\n              </form>\n            </>\n          ) : (\n              <>\n                {(parseInt(userId) == parseInt(currentUser.id)) && <svg onClick={() => {\n                  this.setState({ isEdit: true });\n                  setCurrentPost(post)\n                }}\n                  id=\"editIcon\"\n                  className=\"edit-icon\"\n                  aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"edit\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"></path></svg>}\n                {/* ************************* DELETE POST NEEDS DYNAMIC ID */}\n                {(parseInt(userId) == parseInt(currentUser.id)) && <svg onClick={async () => {\n                  await deletePost(userId, postId);\n                  handleDelete(postId)\n                }}\n                  id=\"deleteIcon\"\n                  className=\"delete-icon\"\n                  aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"></path></svg>}\n                <p className=\"card-title\"><strong>{title}</strong></p>\n                <p className=\"card-description\">{description}</p>\n              </>\n            )}\n          <Likes postId={postId} currentUser={currentUser} />\n          <Comments postId={postId} currentUser={currentUser} />\n        </section>\n      </article>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\n\nconst Reel = props => {\n  let { handleDelete, currentUser } = props;\n\n  return (\n    <main className=\"\">\n      {props.reelPosts && props.reelPosts.map(post => (\n        <Post\n          key={post.id}\n          currentUser={currentUser}\n          publicId={post.publicId}\n          postId={post.id}\n          title={post.title}\n          userId={post.userId}\n          description={post.description}\n          post={post}\n          handleEditChange={props.handleEditChange}\n          handleEditSubmit={props.handleEditSubmit}\n          setCurrentPost={props.setCurrentPost}\n          currentPost={props.currentPost}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </main>\n  );\n};\n\nexport default Reel;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Made by &#9881; <strong>M.A.A.D.</strong> Bananas&trade;</p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport {uploadPhoto, createPost} from '../services/services';\nimport FilesBase64 from 'react-file-base64';\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filepath: \"\",\n      title: \"\",\n      description: \"\",\n      currentUser: props.currentUser\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n  async handleSubmit (ev) {\n    ev.preventDefault();\n    let resp = await uploadPhoto(this.state.filepath.base64);\n    let publicId = resp.data.public_id;\n    let response = await createPost(this.state.currentUser.id, {\n      publicId: publicId,\n      title: this.state.title,\n      description: this.state.description,\n    });\n    this.props.updateReel(response);\n    this.setState({\n      filepath: \"\",\n      title: \"\",\n      description: \"\"\n    })\n  }\n\n  handleChange (ev) {\n    let {name, value} = ev.target;\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  getFiles(filepath) {\n    this.setState({\n      filepath: filepath\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"post-form\">\n        <img src={!(this.state.filepath === \"\") ? this.state.filepath.base64 : \"https://picsum.photos/g/500/\"} width='100%' alt=\"\"/>\n        <FilesBase64 multiple={false} onDone={this.getFiles.bind(this)}/>\n        <input\n          type='text'\n          name='title'\n          placeholder='Title'\n          onChange={this.handleChange}\n          value={this.state.title}\n        />\n        <input\n          type='text'\n          name='description'\n          placeholder='Description...'\n          onChange={this.handleChange}\n          value={this.state.description}\n        />\n        <button onClick={this.handleSubmit}>Upload</button>\n      </form>\n    );\n  };\n}\n\nexport default PostForm;\n","import React from 'react';\n\nconst Hero = props => {\n  return (\n    <section className=\"hero\" >\n      <h1 className='title'><span>Post</span>Pic</h1>\n      {\n        props.isLoggedIn\n        ?\n        <p>Logged in! Welcome!</p>\n\n        :\n        <p>{props.homeMsg}</p>\n      }\n    </section>\n  );\n};\n\nexport default Hero;\n","import React, { Component } from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\n\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false\n    };\n  }\n\n  render() {\n    const {\n      currentUser,\n      setProfileForm,\n      handleEditProfChange,\n      handleEditProfSubmit,\n      profileForm\n    } = this.props;\n    return (\n      <div className='profile'>\n        {this.state.isEdit ? (\n          <div>\n            <form\n              onSubmit={e => {\n                e.preventDefault();\n                handleEditProfSubmit();\n                this.setState({ isEdit: false });\n              }}\n            >\n              <input\n                type='text'\n                name='name'\n                value={profileForm.name}\n                onChange={handleEditProfChange}\n              />\n\n              <input\n                type='text'\n                name='bio'\n                value={profileForm.bio}\n                onChange={handleEditProfChange}\n              />\n              <button>Submit</button>\n            </form>\n          </div>\n        ) : (\n          <>\n            {currentUser && (\n              <div>\n                <CloudinaryContext\n                  cloudName='photo-sharing-app'\n                  apiKey={api_key}\n                  apiSecret={api_secret}\n                >\n                  <Image\n                    className='pro-pic'\n                    publicId={currentUser.pro_pic}\n                  />\n                </CloudinaryContext>\n                <aside>\n                  <p>\n                    <strong>{currentUser.name}</strong>\n                  </p>\n                  <p>{currentUser.bio}</p>\n                  <button\n                    onClick={() => {\n                      this.setState({ isEdit: true });\n                      setProfileForm(currentUser);\n                    }}\n                  >\n                    Edit\n                  </button>\n                </aside>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Redirect } from 'react-router-dom';\nimport {\n  uploadPhoto,\n  createUser,\n  loginUser,\n  getAllPosts,\n  editPost,\n  editUser\n} from './services/services';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Reel from './components/Reel';\nimport Footer from './components/Footer';\nimport PostForm from './components/PostForm';\nimport Hero from './components/Hero';\nimport Profile from './components/Profile';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authToken: '',\n      currentUser: {\n        publicId: ''\n      },\n      filepath: '',\n      isLoggedIn: false,\n      redirected: false,\n      userForm: {\n        //this no longer needs passed to register\n        name: '',\n        email: '',\n        password: ''\n      },\n      reelPosts: [],\n      currentPost: {},\n      profileForm: {},\n      homeMsg: 'Welcome to PostPic, where you can post a pic!'\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditChange = this.handleEditChange.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.updateReel = this.updateReel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.setCurrentPost = this.setCurrentPost.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n    this.loginErrorMessage = this.loginErrorMessage.bind(this);\n    this.handleEditProfChange = this.handleEditProfChange.bind(this);\n    this.handleEditProfSubmit = this.handleEditProfSubmit.bind(this);\n    this.setProfileForm = this.setProfileForm.bind(this);\n  }\n\n  updateReel(post) {\n    this.setState(prevState => ({\n      ...prevState,\n      reelPosts: [\n        post,\n        ...prevState.reelPosts.filter((post, idx) => post.idx > 0)\n      ]\n    }));\n  }\n\n  handleRedirect() {\n    this.setState(prevState => ({\n      ...prevState,\n      redirected: true\n    }));\n    return <Redirect to='/' />;\n  }\n\n  handleDelete(postId) {\n    this.setState(prevState => ({\n      ...prevState,\n      reelPosts: prevState.reelPosts.filter(post => !(post.id === postId))\n    }));\n  }\n\n  async loadReel() {\n    const reelPosts = await getAllPosts();\n    this.setState({\n      reelPosts\n    });\n  }\n\n  async componentDidMount() {\n    const reelPosts = await getAllPosts();\n    this.setState({\n      reelPosts\n    });\n\n    if (localStorage.getItem('token')) {\n      this.setState({\n        authToken: localStorage.getItem('token')\n      });\n      if (localStorage.getItem('user')) {\n        this.setState({\n          currentUser: JSON.parse(localStorage.getItem('user')),\n          isLoggedIn: true\n        });\n      }\n    } else {\n      this.setState({\n        isLoggedIn: false,\n        redirect: false\n      });\n    }\n  }\n\n  async handleUpload(e) {\n    e.preventDefault();\n    let { filepath } = this.state;\n    let resp = await uploadPhoto(filepath);\n    console.log(resp);\n    return resp;\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      homeMsg: 'Welcome to PostPic, where you can post a pic!',\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }));\n  }\n\n  handleEditChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      currentPost: {\n        ...prevState.currentPost,\n        [name]: value\n      }\n    }));\n  }\n  handleEditProfChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      profileForm: {\n        ...prevState.profileForm,\n        [name]: value\n      }\n    }));\n  }\n  async handleEditProfSubmit() {\n    const userEdit = await editUser(this.state.currentUser.id, {\n      ...this.state.currentUser,\n      ...this.state.profileForm\n    });\n    this.setState({\n      currentUser: userEdit\n    });\n  }\n\n  async handleEditSubmit() {\n    const newPost = await editPost(\n      this.state.currentUser.id,\n      this.state.currentPost\n    );\n    this.updateReel(newPost);\n  }\n\n  setCurrentPost(post) {\n    this.setState({\n      currentPost: post\n    });\n  }\n  setProfileForm(user) {\n    this.setState({\n      profileForm: {\n        name: user.name,\n        bio: user.bio\n      }\n    });\n  }\n\n  async handleLogin(e) {\n    e.preventDefault();\n    try {\n      const { email, password } = this.state.userForm;\n      console.log(this.state.userForm);\n      const resp = await loginUser({\n        email,\n        password\n      });\n      console.log(resp[0]);\n      console.log(resp[1]);\n      if (resp !== null) {\n        localStorage.setItem('token', resp[0]);\n        localStorage.setItem('user', JSON.stringify(resp[1]));\n        this.setState(prevState => ({\n          isLoggedIn: true,\n          authToken: resp[0],\n          currentUser: resp[1],\n          userForm: {\n            ...prevState.userForm,\n            email: '',\n            password: ''\n          }\n        }));\n        await this.loadReel();\n      }\n    } catch (error) {\n      this.loginErrorMessage();\n      console.log(error);\n    }\n  }\n\n  loginErrorMessage() {\n    const msg = 'You are not registerd or have entered incorrect credentials';\n    console.log(msg);\n    this.setState({\n      homeMsg: msg\n    });\n  }\n\n  async handleRegister(token, currentUser) {\n    this.setState(prevState => ({\n      ...prevState,\n      authToken: token,\n      currentUser: currentUser,\n      isLoggedIn: true\n    }));\n    await this.loadReel();\n  }\n\n  handleLogout(e) {\n    e.preventDefault();\n    console.log('User has been logged out');\n    localStorage.removeItem('token');\n    this.setState({\n      isLoggedIn: false,\n      redirected: false,\n      currentUser: {\n        publicId: ''\n      }\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    //name email password bio pro_pic\n    const userData = { ...this.state.userForm };\n    const resp = await createUser(userData);\n\n    localStorage.setItem('token', resp[0]);\n    localStorage.setItem('user', JSON.stringify(resp[1]));\n\n    this.setState(prevState => ({\n      ...prevState,\n      userForm: {\n        ...prevState.userForm,\n        name: '',\n        email: '',\n        password: ''\n      },\n      isLoggedIn: true,\n      authToken: resp[0],\n      currentUser: resp[1]\n    }));\n    console.log(resp);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Nav\n          proPic={this.state.currentUser.pro_pic}\n          isLoggedIn={this.state.isLoggedIn}\n          handleLogout={this.handleLogout}\n          currentUser={this.state.currentUser}\n        />\n\n        {this.state.isLoggedIn && this.state.redirected === false\n          ? this.handleRedirect()\n          : null}\n\n        <Hero homeMsg={this.state.homeMsg} isLoggedIn={this.state.isLoggedIn} />\n\n        {!this.state.isLoggedIn && (\n          <>\n            <Route\n              exact\n              path='/login'\n              render={() => (\n                <Login\n                  userForm={this.state.userForm}\n                  handleChange={this.handleChange}\n                  handleLogin={this.handleLogin}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/register'\n              render={() => (\n                <Register\n                  userForm={this.state.userForm}\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit}\n                  handleRegister={this.handleRegister}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n          </>\n        )}\n\n        {this.state.isLoggedIn && (\n          <>\n            <Route\n              path='/users/:id'\n              render={props => (\n                <Profile\n                  profileForm={this.state.profileForm}\n                  handleEditProfSubmit={this.handleEditProfSubmit}\n                  handleEditProfChange={this.handleEditProfChange}\n                  currentUser={this.state.currentUser}\n                  setProfileForm={this.setProfileForm}\n                />\n              )}\n            />\n            <PostForm\n              updateReel={this.updateReel}\n              currentUser={this.state.currentUser}\n            />\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <Reel\n                  currentUser={this.state.currentUser}\n                  reelPosts={this.state.reelPosts}\n                  handleDelete={this.handleDelete}\n                  handleEditChange={this.handleEditChange}\n                  handleEditSubmit={this.handleEditSubmit}\n                  setCurrentPost={this.setCurrentPost}\n                  currentPost={this.state.currentPost}\n                />\n              )}\n            />\n            <Route\n              path='/users/:id'\n              render={props => {\n                const userReel = this.state.reelPosts.filter(\n                  post => post.userId === this.state.currentUser.id\n                );\n                return (\n                  <Reel\n                    currentUser={this.state.currentUser}\n                    reelPosts={userReel}\n                    handleDelete={this.handleDelete}\n                    handleEditChange={this.handleEditChange}\n                    handleEditSubmit={this.handleEditSubmit}\n                    setCurrentPost={this.setCurrentPost}\n                    currentPost={this.state.currentPost}\n                  />\n                );\n              }}\n            />\n          </>\n        )}\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}