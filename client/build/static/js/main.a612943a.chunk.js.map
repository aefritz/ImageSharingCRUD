{"version":3,"sources":["services/services.js","components/Nav.jsx","components/Profile.jsx","components/Login.jsx","components/Register.jsx","components/Comments.jsx","components/Post.jsx","components/Reel.jsx","components/Footer.jsx","components/PostForm.jsx","components/Hero.jsx","App.js","serviceWorker.js","index.js"],"names":["cloudinaryApi","axios","create","baseURL","BASE_URL","uploadPhoto","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","resp","wrap","_context","prev","next","console","log","post","file","upload_preset","sent","abrupt","stop","_x","apply","this","arguments","createUser","_ref2","_callee2","_context2","concat","_x2","loginUser","_ref3","_callee3","_context3","_x3","createPost","_ref5","_callee5","id","_context5","headers","Authorization","localStorage","getItem","_x6","_x7","editPost","_ref6","_callee6","_context6","put","_x8","_x9","deletePost","_ref7","_callee7","user_id","post_id","_context7","delete","_x10","_x11","getAllPosts","_ref8","_callee8","_context8","get","createComment","_ref11","_callee11","text","_context11","_x15","_x16","_x17","getPostComments","_ref12","_callee12","_context12","_x18","api_key","process","REACT_APP_API_KEY","api_secret","REACT_APP_API_SECRET","Nav","props","isLoggedIn","react_default","createElement","className","proPic","react_router_dom","to","lib","cloudName","apiKey","apiSecret","publicId","href","onClick","handleLogout","Profile","currentUser","Fragment","pro_pic","name","bio","Login","userForm","handleChange","handleLogin","onSubmit","type","placeholder","onChange","value","email","password","react_router","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filepath","handleSubmit","bind","assertThisInitialized","ev","preventDefault","base64","public_id","error","t0","undefined","setItem","JSON","stringify","handleRegister","setState","e","_e$target","target","prevState","objectSpread","defineProperty","required","src","width","style","borderRadius","alt","build_min_default","multiple","onDone","getFiles","Component","Comments","postId","comments","commentField","comment","toConsumableArray","map","Post","isEdit","_this2","_this$props","title","description","userId","handleDelete","currentPost","handleEditChange","setCurrentPost","handleEditSubmit","components_Profile","components_Comments","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Reel","updateReel","reelPosts","components_Post","key","Footer","PostForm","response","_ev$target","Hero","homeMsg","App","authToken","redirected","handleUpload","handleRedirect","loginErrorMessage","filter","parse","_e$target2","newPost","_context4","msg","token","removeItem","userData","components_Nav","components_Hero","exact","path","render","components_Login","components_Register","components_PostForm","components_Reel","userReel","components_Footer","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a612943a.chunk.js","sourcesContent":["import axios from 'axios';\n// let API_KEY = process.env.REACT_APP_API_KEY;\n\nconst baseURL =\n  'https://api.cloudinary.com/v1_1/photo-sharing-app/image/upload';\nlet cloudinaryApi = axios.create({\n  baseURL: baseURL\n});\n\nconst BASE_URL = 'https://post-picle.herokuapp.com';\n\n// const api = axios.create({\n//   baseURL: `http://localhost:3000`,\n// })\n\nconst uploadPhoto = async (data) => {\n  console.log('triggered');\n  let resp = await cloudinaryApi.post('' ,\n    {\n      file: data,\n      upload_preset: 'v3ntb0un'\n    }\n  );\n  return resp;\n}\n// Register\nconst createUser = async (data) => {\n  const resp = await axios.post(`${BASE_URL}/users`, data);\n  return resp.data;\n};\n// Login\nconst loginUser = async (data) => {\n  const resp = await axios.post(`${BASE_URL}/users/login`, data);\n  return resp.data;\n}\n// Edit profile\nconst editUser = async (id, data) => {\n  const resp = await axios.put(`${BASE_URL}/users/${id}`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n// Create post\nconst createPost = async (id, data) => {\n  const resp = await axios.post(`${BASE_URL}/users/${id}/posts`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n// Edit/Change post\n\nconst editPost = async (id, data) => {\n  const resp = await axios.put(`${BASE_URL}/users/${id}/posts`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data\n}\n// Delete post\nconst deletePost = async (user_id, post_id) => {\n  const resp = await axios.delete(`${BASE_URL}/users/${user_id}/posts/${post_id}`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n// Get all public posts once logged in\nconst getAllPosts = async () => {\n  const resp = await axios.get(`${BASE_URL}/posts`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  console.log(resp.data)\n  return resp.data;\n};\n// Get users own post on profile page\nconst getUserPosts = async (id) => {\n  const resp = await axios.get(`${BASE_URL}/users/${id}/posts`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n\n//endpoint to record a like on a post\nconst createLike = async (user_id, post_id) => { //here user_id refers to the user who is doing the liking\n  const resp = await axios.post(`${BASE_URL}/like/users/${user_id}/posts/${post_id}`, {text: \"placeholder\"},\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to make a comment on a post\nconst createComment = async (user_id, post_id, text) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.post(`${BASE_URL}/comment/users/${user_id}/posts/${post_id}`, {text},\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all comments for a post\nconst getPostComments = async (post_id) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.get(`${BASE_URL}/post/${post_id}/comments`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all likes for a post\nconst getPostLikes = async (post_id) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.get(`${BASE_URL}/post/${post_id}/likes`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all likes for a user\nconst getUserLikes = async (user_id) => { //here user_id refers to the user whose likes you're getting\n  const resp = await axios.get(`${BASE_URL}/users/${user_id}/likes`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\nexport {\n  uploadPhoto,\n  createUser,\n  loginUser,\n  editUser,\n  createPost,\n  editPost,\n  deletePost,\n  getAllPosts,\n  getUserPosts,\n  createLike,\n  createComment,\n  getPostComments,\n  getPostLikes,\n  getUserLikes\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CloudinaryContext, Image } from 'cloudinary-react';\n\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nconst Nav = props => {\n  console.log('You are logged in: ', props.isLoggedIn);\n  return (\n    <header>\n      <nav className=\"container\">\n      {props.proPic && \n        <Link to='/users/:id'>\n          <CloudinaryContext\n            cloudName='photo-sharing-app'\n            apiKey={api_key}\n            apiSecret={api_secret}>\n            <Image className=\"nav-pro-pic\" publicId={props.proPic} />\n          </CloudinaryContext>\n        </Link>}\n        <Link to='/'>Home</Link>\n        {\n          props.isLoggedIn\n            ?\n            <a href='' onClick={props.handleLogout}>Logout</a>\n            :\n            <span>\n              <Link to='/login'>Login</Link> / <Link to='/register'>Register</Link>\n            </span>\n        }\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\n\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nconst Profile = props => {\n  // const proPicStyle = {\n  //   background: \"url(\" + props.currentUser.pro_pic + \")\",\n  //   height: '100px',\n  //   width: '100px',\n  //   backgroundSize: 'cover',\n  //   borderRadius: '50%',\n  // }\n  return (\n    <div className='profile'>\n      {props.currentUser &&\n        <>\n          <CloudinaryContext\n            cloudName='photo-sharing-app'\n            apiKey={api_key}\n            apiSecret={api_secret}>\n            <Image className=\"pro-pic\" publicId={props.currentUser.pro_pic} />\n          </CloudinaryContext>\n          <aside>\n            <p><strong>{props.currentUser.name}</strong></p>\n            <p>{props.currentUser.bio}</p>\n            <button>Edit</button>\n          </aside>\n        </>\n      }\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nconst Login = props => {\n  const { userForm, handleChange, handleLogin, isLoggedIn } = props;\n  return (\n    <form\n      onSubmit={handleLogin}\n      className=\"login-form\">\n      <h2>Login</h2>\n      <input\n        type='text'\n        name='email'\n        placeholder=\"Email\"\n        onChange={handleChange}\n        value={userForm.email}\n      />\n      <input\n        type='password'\n        name='password'\n        placeholder=\"Password\"\n        onChange={handleChange}\n        value={userForm.password}\n      />\n      <button onClick={handleLogin} type='button'>\n        Submit\n      </button>\n      {isLoggedIn && <Redirect to='/'/>}\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FilesBase64 from 'react-file-base64';\nimport { createUser, uploadPhoto } from '../services/services.js';\n\n//const { userForm, handleChange, handleSubmit } = props;\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userForm: {\n        name: '',\n        email: '',\n        password: '',\n        bio: '',\n      },\n      filepath: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleSubmit(ev) {\n    ev.preventDefault();\n    let publicId;\n    if (this.state.filepath) {\n      try {\n        let resp = await uploadPhoto(this.state.filepath.base64);\n        publicId = resp.data.public_id;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    //console.log('handlesubmit called in postForm');\n    let resp = await createUser({\n      name: this.state.userForm.name,\n      password: this.state.userForm.password,\n      email: this.state.userForm.email,\n      bio: this.state.userForm.bio,\n      pro_pic: (publicId === undefined) ? \"default\" : publicId,\n    });\n    localStorage.setItem('token', resp[0]);\n    localStorage.setItem('user', JSON.stringify(resp[1]));\n    this.props.handleRegister(resp[0], resp[1]);\n  }\n\n  getFiles(filepath) {\n    this.setState({\n      filepath: filepath\n    });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }));\n  }\n\n  render() {\n    const uploadStyleObject = { borderRadius: \"100%\" };\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h2>Register</h2>\n        <input\n          type='text'\n          name='name'\n          placeholder='Name'\n          onChange={this.handleChange}\n          value={this.state.userForm.name}\n          required\n        />\n        <input\n          type='text'\n          name='email'\n          placeholder='Email'\n          onChange={this.handleChange}\n          value={this.state.userForm.email}\n          required\n        />\n        <input\n          type='password'\n          name='password'\n          placeholder='Password'\n          onChange={this.handleChange}\n          value={this.state.userForm.password}\n          required\n        />\n        <input\n          type='text'\n          name='bio'\n          placeholder='Bio'\n          onChange={this.handleChange}\n          value={this.state.userForm.bio}\n        />\n        <h6>Select Profile Picture</h6>\n        <img className=\"pro-pic-register-form\"\n          src={!(this.state.filepath === \"\") ? this.state.filepath.base64 : \"https://res.cloudinary.com/photo-sharing-app/image/upload/v1553094181/default.png\"} width='100%' style={uploadStyleObject}\n          alt=\"\" />\n        <FilesBase64 multiple={false} onDone={this.getFiles.bind(this)} />\n        <button onClick={this.handleSubmit} type='button'>\n          Submit\n        </button>\n        {this.props.isLoggedIn && <Redirect to='/' />}\n      </form>\n    );\n  }\n};\n\nexport default Register;\n","import React, {Component} from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\n//cause we might  need to render the user's picture...\nimport {createComment, getPostComments} from '../services/services';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: props.currentUser,\n      postId: props.postId,\n      comments: [],\n      commentField: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    let comments = await getPostComments(this.state.postId);\n    this.setState(prevState => ({\n      ...prevState,\n      comments: comments\n    }));\n  }\n\n  handleChange(ev) {\n    let {value} = ev.target;\n    this.setState(prevState => (\n      {\n        ...prevState,\n        commentField: value\n      }\n    ))\n  }\n\n  async handleSubmit(ev) {\n    ev.preventDefault();\n    let comment = await createComment(\n      this.state.currentUser.id,\n      this.state.postId,\n      this.state.commentField);\n    this.setState(prevState => ({\n      ...prevState,\n      comments: [\n        ...prevState.comments,\n        comment\n      ]\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            type='text'\n            name='commentField'\n            value={this.state.commentField}\n            onChange={this.handleChange}\n            />\n          <button type='submit' onClick={this.handleSubmit}>Submit</button>\n        </form>\n        {this.state.comments.map(comment => (\n          <div>\n            <p>\n              {comment.text}\n            </p>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n}\n\n\nexport default Comments;\n","import React, { Component } from 'react';\nimport { deletePost } from '../services/services';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport Profile from './Profile';\nimport Comments from './Comments';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false\n    };\n  }\n  render() {\n    const {\n      title,\n      description,\n      postId,\n      publicId,\n      userId,\n      handleDelete,\n      post,\n      currentPost,\n      currentUser,\n      handleEditChange,\n      setCurrentPost,\n      handleEditSubmit\n    } = this.props;\n\n    let api_key = process.env.REACT_APP_API_KEY;\n    let api_secret = process.env.REACT_APP_API_SECRET;\n\n    console.log(userId)\n\n    return (\n      <article className='card'>\n        <Profile currentUser={currentUser} />\n        <CloudinaryContext\n          cloudName='photo-sharing-app'\n          apiKey={api_key}\n          apiSecret={api_secret}>\n          <Image className=\"post\" publicId={publicId} />\n        </CloudinaryContext>\n        <Comments postId={postId} currentUser={currentUser}/>\n        {this.state.isEdit ? (\n          <>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              handleEditSubmit();\n              this.setState({ isEdit: false })}}>\n\n              <input\n                type='text'\n                name='title'\n                value={currentPost.title}\n                onChange={handleEditChange} />\n\n              <input\n                type='text'\n                name='description'\n                value={currentPost.description}\n                onChange={handleEditChange} />\n              <button>Submit</button>\n\n            </form>\n          </>\n        ) : (\n            <>\n              <svg onClick={() => {\n                this.setState({ isEdit: true });\n                setCurrentPost(post) }}\n                id=\"editIcon\"\n                className=\"edit-icon\"\n                aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"edit\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"></path></svg>\n              {/* ************************* DELETE POST NEEDS DYNAMIC ID */}\n              <svg onClick={async () => {\n                  await deletePost(userId, postId);\n                  handleDelete(postId) }}\n                id=\"deleteIcon\"\n                className=\"delete-icon\"\n                aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"></path></svg>\n              <p><strong>{title}</strong></p>\n              <p>{description}</p>\n            </>\n\n          )}\n      </article>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\n\nconst Reel = props => {\n  let {updateReel, handleDelete, currentUser, reelPosts, setCurrentPost} = props;\n\n  return (\n    <main className=\"container\">\n      {props.reelPosts && props.reelPosts.map(post => (\n        <Post\n          key={post.id}\n          currentUser={currentUser}\n          publicId={post.publicId}\n          postId={post.id}\n          title={post.title}\n          userId={post.userId}\n          description={post.description}\n          post={post}\n          handleEditChange={props.handleEditChange}\n          handleEditSubmit={props.handleEditSubmit}\n          setCurrentPost={props.setCurrentPost}\n          currentPost={props.currentPost}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </main>\n  );\n};\n\nexport default Reel;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Made by &#9881; <strong>M.A.A.D.</strong> Bananas&trade;</p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, {Component} from 'react';\n// import axios from 'axios';\nimport {uploadPhoto, createPost} from '../services/services';\nimport FilesBase64 from 'react-file-base64';\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filepath: \"\",\n      title: \"\",\n      description: \"\",\n      currentUser: props.currentUser\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n  async handleSubmit (ev) {\n    ev.preventDefault();\n    let resp = await uploadPhoto(this.state.filepath.base64);\n    let publicId = resp.data.public_id;\n    let response = await createPost(this.state.currentUser.id, { //1 is a placeholder, this will break unless server is running\n      publicId: publicId,\n      title: this.state.title,\n      description: this.state.description,\n    });\n    this.props.updateReel(response);\n    this.setState({\n      filepath: \"\",\n      title: \"\",\n      description: \"\"\n    })\n  }\n\n  handleChange (ev) {\n    let {name, value} = ev.target;\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  getFiles(filepath) {\n    this.setState({\n      filepath: filepath\n    });\n  }\n\n\n  //const { title, description, handleChange, handleSubmit } = props;\n  render() {\n    return (\n      <form className=\"post-form\">\n        <img src={!(this.state.filepath === \"\") ? this.state.filepath.base64 : \"https://picsum.photos/g/500/\"} width='100%' alt=\"\"/>\n        <FilesBase64 multiple={false} onDone={this.getFiles.bind(this)}/>\n        <input\n          type='text'\n          name='title'\n          placeholder='Title'\n          onChange={this.handleChange}\n          value={this.state.title}\n        />\n        <input\n          type='text'\n          name='description'\n          placeholder='Description...'\n          onChange={this.handleChange}\n          value={this.state.description}\n        />\n        <button onClick={this.handleSubmit}>Upload</button>\n      </form>\n    );\n  };\n}\n\nexport default PostForm;\n","import React from 'react';\n\nconst Hero = props => {\n  return (\n    <section className=\"hero\" >\n      <h1 className='title'><span>Post</span>Pic</h1>\n      {\n        props.isLoggedIn\n        ?\n        <p>Logged in! Welcome!</p>\n\n        :\n        <p>{props.homeMsg}</p>\n      }\n    </section>\n  );\n};\n\nexport default Hero;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Link, Redirect } from 'react-router-dom';\nimport {\n  uploadPhoto,\n  createUser,\n  loginUser,\n  getAllPosts,\n  editPost\n} from './services/services';\nimport Nav from './components/Nav';\nimport Profile from './components/Profile';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Reel from './components/Reel';\nimport Footer from './components/Footer';\nimport PostForm from './components/PostForm';\nimport Hero from './components/Hero';\n\n// import ImageUpload from './components/ImageUpload';\n// import { Video, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import { Cloudinary } from 'cloudinary-react';\n// import FilesBase64 from 'react-file-base64';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authToken: '',\n      currentUser: {\n        publicId: '',\n      },\n      filepath: '',\n      isLoggedIn: false,\n      redirected: false,\n      userForm: {\n        //this no longer needs passed to register\n        name: '',\n        email: '',\n        password: ''\n      },\n      reelPosts: [],\n      currentPost: {},\n      homeMsg: 'Welcome to PostPic, where you can post a pic!',\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditChange = this.handleEditChange.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.updateReel = this.updateReel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.setCurrentPost = this.setCurrentPost.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n    this.loginErrorMessage = this.loginErrorMessage.bind(this);\n  }\n// NEEDS FIX!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// find array of 1rst and this = that\n  updateReel(post) {\n    this.setState(prevState => ({\n      ...prevState,\n      reelPosts: [\n        post,\n        ...prevState.reelPosts\n      ]\n    }))\n  }\n///////////////////////////////\n  handleRedirect() {\n    this.setState(prevState => ({\n      ...prevState,\n      redirected: true\n    }));\n    return (<Redirect to = '/'/>);\n  };\n  handleDelete(postId) {\n    this.setState(prevState => ({\n      ...prevState,\n      reelPosts: prevState.reelPosts.filter(post => !(post.id === postId))\n    }));\n  }\n\n  async componentDidMount() {\n   console.log('component did mount called')\n   const reelPosts = await getAllPosts();\n   this.setState({\n     reelPosts,\n   })\n    if (localStorage.getItem('token')) {\n      this.setState({\n        authToken: localStorage.getItem('token'),\n      });\n      if (localStorage.getItem('user')) {\n        this.setState({\n          currentUser: JSON.parse(localStorage.getItem('user')),\n          isLoggedIn: true,\n        });\n      }\n    }\n  }\n\n  async handleUpload(e) {\n    e.preventDefault();\n    let { filepath } = this.state;\n    let resp = await uploadPhoto(filepath);\n    console.log(resp);\n    return resp;\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      homeMsg: 'Welcome to PostPic, where you can post a pic!',\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }));\n  }\n\n  handleEditChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      currentPost: {\n        ...prevState.currentPost,\n        [name]: value\n      }\n    }));\n  }\n\n  async handleEditSubmit() {\n    const newPost = await editPost(\n      this.state.currentUser.id,\n      this.state.currentPost\n    );\n    this.updateReel(newPost);\n  }\n\n  setCurrentPost(post) {\n    this.setState({\n      currentPost: post\n    });\n  }\n\n  async handleLogin(e) {\n    e.preventDefault();\n    try {\n      const { email, password } = this.state.userForm;\n      console.log(this.state.userForm);\n      const resp = await loginUser({\n        email,\n        password\n      });\n      console.log(resp[0]);\n      console.log(resp[1]);\n      if (resp !== null) {\n        localStorage.setItem('token', resp[0]);\n        localStorage.setItem('user', JSON.stringify(resp[1]));\n        this.setState(prevState => ({\n          isLoggedIn: true,\n          authToken: resp[0],\n          currentUser: resp[1],\n          userForm: {\n            ...prevState.userForm,\n            email: '',\n            password: ''\n          }\n        }));\n      }\n    } catch (error) {\n      this.loginErrorMessage();\n      console.log(error)\n    }\n \n  }\n\n  loginErrorMessage() {\n    const msg = 'You are not registerd or have entered incorrect credentials';\n    console.log(msg);\n    this.setState({\n      homeMsg: msg,\n    })\n  }\n\n  handleRegister(token, currentUser) {\n    this.setState(prevState => ({\n      ...prevState,\n      authToken: token,\n      currentUser: currentUser,\n      isLoggedIn: true\n    }));\n  }\n\n  handleLogout(e) {\n    e.preventDefault();\n    console.log('User has been logged out');\n    localStorage.removeItem('token');\n    this.setState({\n      isLoggedIn: false\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    //name email password bio pro_pic\n    const userData = { ...this.state.userForm };\n    const resp = await createUser(userData);\n\n    localStorage.setItem('token', resp[0]);\n    localStorage.setItem('user', JSON.stringify(resp[1]));\n\n    this.setState(prevState => ({\n      ...prevState,\n      userForm: {\n        ...prevState.userForm,\n        name: '',\n        email: '',\n        password: ''\n      },\n      isLoggedIn: true,\n      authToken: resp[0],\n      currentUser: resp[1]\n    }));\n    console.log(resp);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Nav\n          proPic={this.state.currentUser.pro_pic}\n          isLoggedIn={this.state.isLoggedIn}\n          handleLogout={this.handleLogout}\n        />\n        {(this.state.isLoggedIn && (this.state.redirected === false)) ? this.handleRedirect() : null}\n\n        <Hero \n          homeMsg={this.state.homeMsg}\n          isLoggedIn={this.state.isLoggedIn} />\n\n        {!this.state.isLoggedIn && (\n          <>\n            <Route exact path='/login'\n              render={() => (\n                <Login\n                  userForm={this.state.userForm}\n                  handleChange={this.handleChange}\n                  handleLogin={this.handleLogin}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n            <Route exact path='/register'\n              render={() => (\n                <Register\n                  userForm={this.state.userForm}\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit}\n                  handleRegister={this.handleRegister}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n          </>\n        )}\n\n        {this.state.isLoggedIn && (\n          <>\n            <PostForm updateReel={this.updateReel}\n                      currentUser={this.state.currentUser}/>\n            <Route exact path=\"/\" render={props => (\n             <Reel\n              currentUser={this.state.currentUser}\n              reelPosts={this.state.reelPosts}\n              handleDelete={this.handleDelete}\n              handleEditChange={this.handleEditChange}\n              handleEditSubmit={this.handleEditSubmit}\n              setCurrentPost={this.setCurrentPost}\n              currentPost={this.state.currentPost} />\n              )}\n            />\n            <Route path=\"/users/:id\" render={props => {\n            const userReel = this.state.reelPosts.filter(post => post.userId === this.state.currentUser.id)\n            return <Reel\n              currentUser={this.state.currentUser}\n              reelPosts={userReel}\n              handleDelete={this.handleDelete}\n              handleEditChange={this.handleEditChange}\n              handleEditSubmit={this.handleEditSubmit}\n              setCurrentPost={this.setCurrentPost}\n              currentPost={this.state.currentPost} />\n                }\n              }\n            />\n\n          </> )\n        }\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <CloudinaryContext\n// cloudName='photo-sharing-app'\n// apiKey={api_key}\n// apiSecret={api_secret}>\n// <Route exact path='/'\n//   render={props => (\n//     <>\n//       <h2>Image retrieved from our Cloudinary account through the React SDK.</h2>\n//       <Image\n//         publicId='sample'\n//         width='300' />\n//       <form>\n//         <FilesBase64\n//           multiple={false}\n//           onDone={this.getFiles.bind(this)} />\n//         <button type='submit'\n//           onClick={this.handleUpload}>upload</button>\n//       </form>\n//     </>)} />\n// <Route\n//   path='/user/:id'\n//   render={props => (\n//     <h1>User: {props.match.params.id}</h1>\n//   )}\n// />\n// </CloudinaryContext>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}