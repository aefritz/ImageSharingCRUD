{"version":3,"sources":["services/services.js","components/Nav.jsx","components/Login.jsx","components/Register.jsx","components/Comments.jsx","components/Profile.jsx","components/Likes.jsx","components/Post.jsx","components/Reel.jsx","components/Footer.jsx","components/PostForm.jsx","components/Hero.jsx","App.js","serviceWorker.js","index.js"],"names":["cloudinaryApi","axios","create","baseURL","BASE_URL","uploadPhoto","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","resp","wrap","_context","prev","next","console","log","post","file","upload_preset","sent","abrupt","stop","_x","apply","this","arguments","createUser","_ref2","_callee2","_context2","concat","_x2","loginUser","_ref3","_callee3","_context3","_x3","createPost","_ref5","_callee5","id","_context5","headers","Authorization","localStorage","getItem","_x6","_x7","editPost","_ref6","_callee6","_context6","put","_x8","_x9","deletePost","_ref7","_callee7","user_id","post_id","_context7","delete","_x10","_x11","getAllPosts","_ref8","_callee8","_context8","get","createLike","_ref10","_callee10","_context10","text","_x13","_x14","createComment","_ref11","_callee11","_context11","_x15","_x16","_x17","getPostComments","_ref12","_callee12","_context12","_x18","getPostLikes","_ref13","_callee13","_context13","_x19","api_key","process","REACT_APP_API_KEY","api_secret","REACT_APP_API_SECRET","Nav","props","react_default","createElement","className","proPic","react_router_dom","to","lib","cloudName","apiKey","apiSecret","publicId","isLoggedIn","href","onClick","handleLogout","Login","userForm","handleChange","handleLogin","onSubmit","type","name","placeholder","onChange","value","email","password","react_router","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bio","filepath","handleSubmit","bind","assertThisInitialized","ev","preventDefault","base64","public_id","error","t0","pro_pic","undefined","setItem","JSON","stringify","handleRegister","setState","e","_e$target","target","prevState","objectSpread","defineProperty","required","src","width","style","borderRadius","alt","build_min_default","multiple","onDone","getFiles","Component","Comments","currentUser","postId","comments","commentField","comment","toConsumableArray","map","Likes","likes","isThisLiked","some","like","parseInt","userId","_this2","length","Post","isEdit","_this$props","title","description","handleDelete","currentPost","handleEditChange","setCurrentPost","handleEditSubmit","Fragment","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","components_Likes","components_Comments","Reel","updateReel","reelPosts","components_Post","key","Footer","PostForm","response","_ev$target","Hero","homeMsg","App","authToken","redirected","handleUpload","handleRedirect","loginErrorMessage","filter","idx","parse","redirect","_e$target2","newPost","loadReel","msg","token","removeItem","userData","components_Nav","components_Hero","exact","path","render","components_Login","components_Register","components_PostForm","components_Reel","userReel","components_Footer","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a83a0b5a.chunk.js","sourcesContent":["import axios from 'axios';\n// let API_KEY = process.env.REACT_APP_API_KEY;\n\nconst baseURL =\n  'https://api.cloudinary.com/v1_1/photo-sharing-app/image/upload';\nlet cloudinaryApi = axios.create({\n  baseURL: baseURL\n});\n\nconst BASE_URL = 'https://post-picle.herokuapp.com';\n\n// const api = axios.create({\n//   baseURL: `http://localhost:3000`,\n// })\n\nconst uploadPhoto = async (data) => {\n  console.log('triggered');\n  let resp = await cloudinaryApi.post('' ,\n    {\n      file: data,\n      upload_preset: 'v3ntb0un'\n    }\n  );\n  return resp;\n}\n// Register\nconst createUser = async (data) => {\n  const resp = await axios.post(`${BASE_URL}/users`, data);\n  return resp.data;\n};\n// Login\nconst loginUser = async (data) => {\n  const resp = await axios.post(`${BASE_URL}/users/login`, data);\n  return resp.data;\n}\n// Edit profile\nconst editUser = async (id, data) => {\n  const resp = await axios.put(`${BASE_URL}/users/${id}`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n// Create post\nconst createPost = async (id, data) => {\n  const resp = await axios.post(`${BASE_URL}/users/${id}/posts`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n// Edit/Change post\n\nconst editPost = async (id, data) => {\n  const resp = await axios.put(`${BASE_URL}/users/${id}/posts`, data, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data\n}\n// Delete post\nconst deletePost = async (user_id, post_id) => {\n  const resp = await axios.delete(`${BASE_URL}/users/${user_id}/posts/${post_id}`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n// Get all public posts once logged in\nconst getAllPosts = async () => {\n  const resp = await axios.get(`${BASE_URL}/posts`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  console.log(resp.data)\n  return resp.data;\n};\n// Get users own post on profile page\nconst getUserPosts = async (id) => {\n  const resp = await axios.get(`${BASE_URL}/users/${id}/posts`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n};\n\n//endpoint to record a like on a post\nconst createLike = async (user_id, post_id) => { //here user_id refers to the user who is doing the liking\n  const resp = await axios.post(`${BASE_URL}/like/users/${user_id}/posts/${post_id}`, {text: \"placeholder\"},\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to make a comment on a post\nconst createComment = async (user_id, post_id, text) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.post(`${BASE_URL}/comment/users/${user_id}/posts/${post_id}`, {text},\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all comments for a post\nconst getPostComments = async (post_id) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.get(`${BASE_URL}/post/${post_id}/comments`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all likes for a post\nconst getPostLikes = async (post_id) => { //here user_id refers to the user who is doing the posting\n  const resp = await axios.get(`${BASE_URL}/post/${post_id}/likes`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\n//endpoint to get all likes for a user\nconst getUserLikes = async (user_id) => { //here user_id refers to the user whose likes you're getting\n  const resp = await axios.get(`${BASE_URL}/users/${user_id}/likes`,\n     { headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` } });\n  return resp.data;\n}\n\nexport {\n  uploadPhoto,\n  createUser,\n  loginUser,\n  editUser,\n  createPost,\n  editPost,\n  deletePost,\n  getAllPosts,\n  getUserPosts,\n  createLike,\n  createComment,\n  getPostComments,\n  getPostLikes,\n  getUserLikes\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CloudinaryContext, Image } from 'cloudinary-react';\n\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nconst Nav = props => {\n  return (\n    <header>\n      <nav className=\"container\">\n      {props.proPic && \n        <Link to='/users/:id'>\n          <CloudinaryContext\n            cloudName='photo-sharing-app'\n            apiKey={api_key}\n            apiSecret={api_secret}>\n            <Image className=\"nav-pro-pic\" publicId={props.proPic} />\n          </CloudinaryContext>\n        </Link>}\n        <Link to='/'>Home</Link>\n        {\n          props.isLoggedIn\n            ?\n            <a href='' onClick={props.handleLogout}>Logout</a>\n            :\n            <span>\n              <Link to='/login'>Login</Link> / <Link to='/register'>Register</Link>\n            </span>\n        }\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nconst Login = props => {\n  const { userForm, handleChange, handleLogin, isLoggedIn } = props;\n  return (\n    <form\n      onSubmit={handleLogin}\n      className=\"login-form\">\n      <h2>Login</h2>\n      <input\n        type='text'\n        name='email'\n        placeholder=\"Email\"\n        onChange={handleChange}\n        value={userForm.email}\n      />\n      <input\n        type='password'\n        name='password'\n        placeholder=\"Password\"\n        onChange={handleChange}\n        value={userForm.password}\n      />\n      <button onClick={handleLogin} type='button'>\n        Submit\n      </button>\n      {isLoggedIn && <Redirect to='/'/>}\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FilesBase64 from 'react-file-base64';\nimport { createUser, uploadPhoto } from '../services/services.js';\n\n//const { userForm, handleChange, handleSubmit } = props;\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userForm: {\n        name: '',\n        email: '',\n        password: '',\n        bio: '',\n      },\n      filepath: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleSubmit(ev) {\n    ev.preventDefault();\n    let publicId;\n    if (this.state.filepath) {\n      try {\n        let resp = await uploadPhoto(this.state.filepath.base64);\n        publicId = resp.data.public_id;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    //console.log('handlesubmit called in postForm');\n    let resp = await createUser({\n      name: this.state.userForm.name,\n      password: this.state.userForm.password,\n      email: this.state.userForm.email,\n      bio: this.state.userForm.bio,\n      pro_pic: (publicId === undefined) ? \"default\" : publicId,\n    });\n    localStorage.setItem('token', resp[0]);\n    localStorage.setItem('user', JSON.stringify(resp[1]));\n    this.props.handleRegister(resp[0], resp[1]);\n  }\n\n  getFiles(filepath) {\n    this.setState({\n      filepath: filepath\n    });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }));\n  }\n\n  render() {\n    const uploadStyleObject = { borderRadius: \"100%\" };\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h2>Register</h2>\n        <input\n          type='text'\n          name='name'\n          placeholder='Name'\n          onChange={this.handleChange}\n          value={this.state.userForm.name}\n          required\n        />\n        <input\n          type='text'\n          name='email'\n          placeholder='Email'\n          onChange={this.handleChange}\n          value={this.state.userForm.email}\n          required\n        />\n        <input\n          type='password'\n          name='password'\n          placeholder='Password'\n          onChange={this.handleChange}\n          value={this.state.userForm.password}\n          required\n        />\n        <input\n          type='text'\n          name='bio'\n          placeholder='Bio'\n          onChange={this.handleChange}\n          value={this.state.userForm.bio}\n        />\n        <h6>Select Profile Picture</h6>\n        <img className=\"pro-pic-register-form\"\n          src={!(this.state.filepath === \"\") ? this.state.filepath.base64 : \"https://res.cloudinary.com/photo-sharing-app/image/upload/v1553094181/default.png\"} width='100%' style={uploadStyleObject}\n          alt=\"\" />\n        <FilesBase64 multiple={false} onDone={this.getFiles.bind(this)} />\n        <button onClick={this.handleSubmit} type='button'>\n          Submit\n        </button>\n        {this.props.isLoggedIn && <Redirect to='/' />}\n      </form>\n    );\n  }\n};\n\nexport default Register;\n","import React, {Component} from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\n//cause we might  need to render the user's picture...\nimport {createComment, getPostComments} from '../services/services';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: props.currentUser,\n      postId: props.postId,\n      comments: [],\n      commentField: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    let comments = await getPostComments(this.state.postId);\n    this.setState(prevState => ({\n      ...prevState,\n      comments: comments\n    }));\n  }\n\n  handleChange(ev) {\n    let {value} = ev.target;\n    this.setState(prevState => (\n      {\n        ...prevState,\n        commentField: value\n      }\n    ))\n  }\n\n  async handleSubmit(ev) {\n    ev.preventDefault();\n    let comment = await createComment(\n      this.state.currentUser.id,\n      this.state.postId,\n      this.state.commentField);\n    this.setState(prevState => ({\n      ...prevState,\n      comments: [\n        ...prevState.comments,\n        comment\n      ]\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            type='text'\n            name='commentField'\n            value={this.state.commentField}\n            onChange={this.handleChange}\n            />\n          <button type='submit' onClick={this.handleSubmit}>Submit</button>\n        </form>\n        {this.state.comments.map(comment => (\n          <div>\n            <p>\n              {comment.text}\n            </p>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n}\n\n\nexport default Comments;\n","import React from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\n\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nconst Profile = props => {\n  return (\n    <div className='profile'>\n      {props.currentUser &&\n        <>\n          <CloudinaryContext\n            cloudName='photo-sharing-app'\n            apiKey={api_key}\n            apiSecret={api_secret}>\n            <Image className=\"pro-pic\" publicId={props.currentUser.pro_pic} />\n          </CloudinaryContext>\n          <aside>\n            <p><strong>{props.currentUser.name}</strong></p>\n            <p>{props.currentUser.bio}</p>\n            <button>Edit</button>\n          </aside>\n        </>\n      }\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport {createLike, getPostLikes} from '../services/services';\nlet api_key = process.env.REACT_APP_API_KEY;\nlet api_secret = process.env.REACT_APP_API_SECRET;\n\nclass Likes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: props.currentUser,\n      postId: props.postId,\n      likes: [],\n      isThisLiked: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    let likes = await getPostLikes(this.state.postId);\n    this.setState(prevState => ({\n      ...prevState,\n      likes: likes\n    }));\n    if (this.state.currentUser !== null) {\n      if (likes.some(like => (parseInt(like.userId) === this.state.currentUser.id))) {\n        this.setState({\n          isThisLiked: true\n        });\n      }\n    }  \n  }\n\n  async handleChange() {\n    let resp = await createLike(\n      this.state.currentUser.id,\n      this.state.postId\n    );\n    this.setState(prevState => ({\n      ...prevState,\n      isThisLiked: true,\n      likes: [\n        ...prevState.likes,\n        resp\n      ]\n    }));\n  }\n\n  render() {\n    return (\n      <CloudinaryContext\n      cloudName='photo-sharing-app'\n      apiKey={api_key}\n      apiSecret={api_secret}>\n      <div>\n        <p>\n        {this.state.isThisLiked ?\n        `Liked by you and ${this.state.likes.length - 1} other users` :\n        `Liked by ${this.state.likes.length} users`}\n        </p>\n        {this.state.isThisLiked ?\n          <Image publicId='heart-solid' width='20px' /> :\n          <Image publicId='heart-regular' width='20px' onClick={this.handleChange}/>\n        }\n      </div>\n      </CloudinaryContext>\n    )\n  }\n\n}\n\n\nexport default Likes;\n","import React, { Component } from 'react';\nimport { deletePost } from '../services/services';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport Profile from './Profile';\nimport Comments from './Comments';\nimport Likes from './Likes'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false\n    };\n  }\n  render() {\n    const {\n      title,\n      description,\n      postId,\n      publicId,\n      userId,\n      handleDelete,\n      post,\n      currentPost,\n      currentUser,\n      handleEditChange,\n      setCurrentPost,\n      handleEditSubmit\n    } = this.props;\n\n    let api_key = process.env.REACT_APP_API_KEY;\n    let api_secret = process.env.REACT_APP_API_SECRET;\n\n    console.log(userId)\n\n    return (\n      <article className='card'>\n\n\n        <CloudinaryContext\n          cloudName='photo-sharing-app'\n          apiKey={api_key}\n          apiSecret={api_secret}>\n          <Image className=\"post\" publicId={publicId} />\n        </CloudinaryContext>\n        \n        {this.state.isEdit ? (\n          <>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              handleEditSubmit();\n              this.setState({ isEdit: false })}}>\n\n              <input\n                type='text'\n                name='title'\n                value={currentPost.title}\n                onChange={handleEditChange} />\n\n              <input\n                type='text'\n                name='description'\n                value={currentPost.description}\n                onChange={handleEditChange} />\n              <button>Submit</button>\n\n            </form>\n          </>\n        ) : (\n            <>\n              <svg onClick={() => {\n                this.setState({ isEdit: true });\n                setCurrentPost(post) }}\n                id=\"editIcon\"\n                className=\"edit-icon\"\n                aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"edit\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"></path></svg>\n              {/* ************************* DELETE POST NEEDS DYNAMIC ID */}\n              <svg onClick={async () => {\n                  await deletePost(userId, postId);\n                  handleDelete(postId) }}\n                id=\"deleteIcon\"\n                className=\"delete-icon\"\n                aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"></path></svg>\n              <p><strong>{title}</strong></p>\n              <p>{description}</p>\n            </>\n\n          )}\n          <Likes postId={postId} currentUser={currentUser}/>\n          <Comments postId={postId} currentUser={currentUser}/>\n      </article>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\n\nconst Reel = props => {\n  let {updateReel, handleDelete, currentUser, reelPosts, setCurrentPost} = props;\n\n  return (\n    <main className=\"container\">\n      {props.reelPosts && props.reelPosts.map(post => (\n        <Post\n          key={post.id}\n          currentUser={currentUser}\n          publicId={post.publicId}\n          postId={post.id}\n          title={post.title}\n          userId={post.userId}\n          description={post.description}\n          post={post}\n          handleEditChange={props.handleEditChange}\n          handleEditSubmit={props.handleEditSubmit}\n          setCurrentPost={props.setCurrentPost}\n          currentPost={props.currentPost}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </main>\n  );\n};\n\nexport default Reel;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Made by &#9881; <strong>M.A.A.D.</strong> Bananas&trade;</p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, {Component} from 'react';\n// import axios from 'axios';\nimport {uploadPhoto, createPost} from '../services/services';\nimport FilesBase64 from 'react-file-base64';\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filepath: \"\",\n      title: \"\",\n      description: \"\",\n      currentUser: props.currentUser\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n  async handleSubmit (ev) {\n    ev.preventDefault();\n    let resp = await uploadPhoto(this.state.filepath.base64);\n    let publicId = resp.data.public_id;\n    let response = await createPost(this.state.currentUser.id, { //1 is a placeholder, this will break unless server is running\n      publicId: publicId,\n      title: this.state.title,\n      description: this.state.description,\n    });\n    this.props.updateReel(response);\n    this.setState({\n      filepath: \"\",\n      title: \"\",\n      description: \"\"\n    })\n  }\n\n  handleChange (ev) {\n    let {name, value} = ev.target;\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  getFiles(filepath) {\n    this.setState({\n      filepath: filepath\n    });\n  }\n\n\n  //const { title, description, handleChange, handleSubmit } = props;\n  render() {\n    return (\n      <form className=\"post-form\">\n        <img src={!(this.state.filepath === \"\") ? this.state.filepath.base64 : \"https://picsum.photos/g/500/\"} width='100%' alt=\"\"/>\n        <FilesBase64 multiple={false} onDone={this.getFiles.bind(this)}/>\n        <input\n          type='text'\n          name='title'\n          placeholder='Title'\n          onChange={this.handleChange}\n          value={this.state.title}\n        />\n        <input\n          type='text'\n          name='description'\n          placeholder='Description...'\n          onChange={this.handleChange}\n          value={this.state.description}\n        />\n        <button onClick={this.handleSubmit}>Upload</button>\n      </form>\n    );\n  };\n}\n\nexport default PostForm;\n","import React from 'react';\n\nconst Hero = props => {\n  return (\n    <section className=\"hero\" >\n      <h1 className='title'><span>Post</span>Pic</h1>\n      {\n        props.isLoggedIn\n        ?\n        <p>Logged in! Welcome!</p>\n\n        :\n        <p>{props.homeMsg}</p>\n      }\n    </section>\n  );\n};\n\nexport default Hero;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Redirect } from 'react-router-dom';\nimport {\n  uploadPhoto,\n  createUser,\n  loginUser,\n  getAllPosts,\n  editPost\n} from './services/services';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Reel from './components/Reel';\nimport Footer from './components/Footer';\nimport PostForm from './components/PostForm';\nimport Hero from './components/Hero';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authToken: '',\n      currentUser: {\n        publicId: '',\n      },\n      filepath: '',\n      isLoggedIn: false,\n      redirected: false,\n      userForm: {\n        //this no longer needs passed to register\n        name: '',\n        email: '',\n        password: ''\n      },\n      reelPosts: [],\n      currentPost: {},\n      homeMsg: 'Welcome to PostPic, where you can post a pic!',\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditChange = this.handleEditChange.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.updateReel = this.updateReel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.setCurrentPost = this.setCurrentPost.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n    this.loginErrorMessage = this.loginErrorMessage.bind(this);\n  }\n\n  updateReel(post) {\n    this.setState(prevState => ({\n      ...prevState,\n      reelPosts: [\n        post,\n        ...prevState.reelPosts.filter((post, idx) => post.idx > 0),\n      ]\n    }))\n  }\n\n  handleRedirect() {\n    this.setState(prevState => ({\n      ...prevState,\n      redirected: true\n    }));\n    return (<Redirect to = '/'/>);\n  };\n\n  handleDelete(postId) {\n    this.setState(prevState => ({\n      ...prevState,\n      reelPosts: prevState.reelPosts.filter(post => !(post.id === postId))\n    }));\n  }\n\n  async loadReel () {\n    const reelPosts = await getAllPosts();\n    this.setState({\n      reelPosts,\n    })\n  }\n\n  async componentDidMount() {\n   console.log('component did mount called');\n   const reelPosts = await getAllPosts();\n   this.setState({\n     reelPosts,\n   })\n    if (localStorage.getItem('token')) {\n      this.setState({\n        authToken: localStorage.getItem('token'),\n      });\n      if (localStorage.getItem('user')) {\n        this.setState({\n          currentUser: JSON.parse(localStorage.getItem('user')),\n          isLoggedIn: true,\n        });\n      }\n    } else {\n      this.setState({\n        isLoggedIn: false,\n        redirect: false\n      })\n    }\n  }\n\n  async handleUpload(e) {\n    e.preventDefault();\n    let { filepath } = this.state;\n    let resp = await uploadPhoto(filepath);\n    console.log(resp);\n    return resp;\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      homeMsg: 'Welcome to PostPic, where you can post a pic!',\n      userForm: {\n        ...prevState.userForm,\n        [name]: value\n      }\n    }));\n  }\n\n  handleEditChange(e) {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      currentPost: {\n        ...prevState.currentPost,\n        [name]: value\n      }\n    }));\n  }\n\n  async handleEditSubmit() {\n    const newPost = await editPost(\n      this.state.currentUser.id,\n      this.state.currentPost\n    );\n    this.updateReel(newPost);\n  }\n\n  setCurrentPost(post) {\n    this.setState({\n      currentPost: post\n    });\n  }\n\n  async handleLogin(e) {\n    e.preventDefault();\n    try {\n      const { email, password } = this.state.userForm;\n      console.log(this.state.userForm);\n      const resp = await loginUser({\n        email,\n        password\n      });\n      console.log(resp[0]);\n      console.log(resp[1]);\n      if (resp !== null) {\n        localStorage.setItem('token', resp[0]);\n        localStorage.setItem('user', JSON.stringify(resp[1]));\n        this.setState(prevState => ({\n          isLoggedIn: true,\n          authToken: resp[0],\n          currentUser: resp[1],\n          userForm: {\n            ...prevState.userForm,\n            email: '',\n            password: ''\n          }\n        }));\n        await this.loadReel();\n      }\n    } catch (error) {\n      this.loginErrorMessage();\n      console.log(error)\n    }\n  }\n\n  loginErrorMessage() {\n    const msg = 'You are not registerd or have entered incorrect credentials';\n    console.log(msg);\n    this.setState({\n      homeMsg: msg,\n    })\n  }\n\n  async handleRegister(token, currentUser) {\n    this.setState(prevState => ({\n      ...prevState,\n      authToken: token,\n      currentUser: currentUser,\n      isLoggedIn: true\n    }));\n    await this.loadReel();\n  }\n\n  handleLogout(e) {\n    e.preventDefault();\n    console.log('User has been logged out');\n    localStorage.removeItem('token');\n    this.setState({\n      isLoggedIn: false,\n      redirected: false,\n      currentUser: {\n        publicId: ''\n      }\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    //name email password bio pro_pic\n    const userData = { ...this.state.userForm };\n    const resp = await createUser(userData);\n\n    localStorage.setItem('token', resp[0]);\n    localStorage.setItem('user', JSON.stringify(resp[1]));\n\n    this.setState(prevState => ({\n      ...prevState,\n      userForm: {\n        ...prevState.userForm,\n        name: '',\n        email: '',\n        password: ''\n      },\n      isLoggedIn: true,\n      authToken: resp[0],\n      currentUser: resp[1]\n    }));\n    console.log(resp);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Nav\n          proPic={this.state.currentUser.pro_pic}\n          isLoggedIn={this.state.isLoggedIn}\n          handleLogout={this.handleLogout}\n        />\n\n        {(this.state.isLoggedIn && (this.state.redirected === false)) ? this.handleRedirect() : null}\n\n        <Hero\n          homeMsg={this.state.homeMsg}\n          isLoggedIn={this.state.isLoggedIn} />\n\n        {!this.state.isLoggedIn && (\n          <>\n            <Route exact path='/login'\n              render={() => (\n                <Login\n                  userForm={this.state.userForm}\n                  handleChange={this.handleChange}\n                  handleLogin={this.handleLogin}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n            <Route exact path='/register'\n              render={() => (\n                <Register\n                  userForm={this.state.userForm}\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit}\n                  handleRegister={this.handleRegister}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n              )}\n            />\n          </>\n        )}\n\n        {this.state.isLoggedIn && (\n          <>\n            <PostForm updateReel={this.updateReel}\n                      currentUser={this.state.currentUser}/>\n            <Route exact path=\"/\" render={props => (\n             <Reel\n              currentUser={this.state.currentUser}\n              reelPosts={this.state.reelPosts}\n              handleDelete={this.handleDelete}\n              handleEditChange={this.handleEditChange}\n              handleEditSubmit={this.handleEditSubmit}\n              setCurrentPost={this.setCurrentPost}\n              currentPost={this.state.currentPost} />\n              )}\n            />\n            <Route path=\"/users/:id\" render={props => {\n            const userReel = this.state.reelPosts.filter(post => post.userId === this.state.currentUser.id)\n            return <Reel\n              currentUser={this.state.currentUser}\n              reelPosts={userReel}\n              handleDelete={this.handleDelete}\n              handleEditChange={this.handleEditChange}\n              handleEditSubmit={this.handleEditSubmit}\n              setCurrentPost={this.setCurrentPost}\n              currentPost={this.state.currentPost} />\n                }\n              }\n            />\n\n          </> )\n        }\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <CloudinaryContext\n// cloudName='photo-sharing-app'\n// apiKey={api_key}\n// apiSecret={api_secret}>\n// <Route exact path='/'\n//   render={props => (\n//     <>\n//       <h2>Image retrieved from our Cloudinary account through the React SDK.</h2>\n//       <Image\n//         publicId='sample'\n//         width='300' />\n//       <form>\n//         <FilesBase64\n//           multiple={false}\n//           onDone={this.getFiles.bind(this)} />\n//         <button type='submit'\n//           onClick={this.handleUpload}>upload</button>\n//       </form>\n//     </>)} />\n// <Route\n//   path='/user/:id'\n//   render={props => (\n//     <h1>User: {props.match.params.id}</h1>\n//   )}\n// />\n// </CloudinaryContext>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}